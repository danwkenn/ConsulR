% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/remove_delete_lines.R
\name{remove_delete_lines}
\alias{remove_delete_lines}
\title{Remove lines marked for deletion
Simple function to take an .R script file and remove any lines previously marked for deletion. This is useful when your computer requires additional lines for the client's code to work. Lines can be added to your version with a pattern e.g. \code{##DELETE##}, and then removed when the code is shipped back to the client.
It should be noted that this is not an ideal solution, and if possible, the use of an R Project file, or compilation of code into an R package should be used to ensure code can be used on multiple machines.
Another use might be to add comments to your version of the code that the client does not need to read.}
\usage{
remove_delete_lines(file, new_file_name, delete_pattern = "##DELETE##$")
}
\arguments{
\item{file}{character string with file path to .R file.}

\item{new_file_name}{character string with file path (and name) for the output .R file.}

\item{delete_pattern}{Regular expression for finding delete marker. Any lines containing this pattern are removed.}
}
\value{
If file runs cleanly, then output is \code{TRUE}.
}
\description{
Remove lines marked for deletion
Simple function to take an .R script file and remove any lines previously marked for deletion. This is useful when your computer requires additional lines for the client's code to work. Lines can be added to your version with a pattern e.g. \code{##DELETE##}, and then removed when the code is shipped back to the client.
It should be noted that this is not an ideal solution, and if possible, the use of an R Project file, or compilation of code into an R package should be used to ensure code can be used on multiple machines.
Another use might be to add comments to your version of the code that the client does not need to read.
}
